## Project settings

# The project name should reflect your actual project name.
PROJECT_NAME=drupal

# Available versions are 7.3 and 7.4.
PHP_VERSION=7.3

# Where the root of the repository is relatively to the docker-compose.yml file.
CODEBASE_PATH=../.

## Compose settings

# Docker compose name the stack and scope the containers with the name of the parent folder which usually is not
# relevant. This variable change that naming convention and should usually be the same as the PROJECT_NAME.
COMPOSE_PROJECT_NAME=drupal

# Docker compose automatically load the docker-compose.yml and docker-compose.override.yml files. To avoid the
# need of specifying which other files we want to load in the CLI we can specify the list here separated by ":".
COMPOSE_FILE=docker-compose.yml:docker-compose.settings.yml

# This option should be left empty on Linux and be ":cached" on MacOS. This defines whether some caching/delay should be
# applied the bind mounts.
COMPOSE_MOUNT_MODE=

## Drupal settings

# How many items show processed at each pass when running a batch.
DRUPAL_BATCH_SIZE=50

# Hash used for security hardening, you NEED to generate a new one and replace this setting using:
# docker-compose exec php drush php-eval 'echo \Drupal\Component\Utility\Crypt::randomBytesBase64(55) . PHP_EOL;'
DRUPAL_HASH_SALT=sample-hash-which-needs-to-be-replaced

# When the option DEV_MODE=1 is set:
# - Assets are watched and rebuilt on change
# - Disable caching
# - Disable CSS/JS aggregation
# - Disable twig caching and auto-reload templates
# - Log all errors
# - Activate Xdebug
# You should always test your website with this option inactive before going to production to validate you have no
# caching issue.
DEV_MODE=0
